package com.ihsinformatics.dynamicformsgenerator.data.pojos;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig offlinePatientDaoConfig;
    private final DaoConfig saveableFormDaoConfig;
    private final DaoConfig serviceHistoryDaoConfig;
    private final DaoConfig encountersWithObsDaoConfig;
    private final DaoConfig formTypeDaoConfig;
    private final DaoConfig identifierTypeDaoConfig;
    private final DaoConfig imageDaoConfig;
    private final DaoConfig locationDaoConfig;
    private final DaoConfig locationAttributeDaoConfig;
    private final DaoConfig locationAttributeTypeDaoConfig;
    private final DaoConfig locationTagDaoConfig;
    private final DaoConfig locationTagMapDaoConfig;
    private final DaoConfig optionDaoConfig;
    private final DaoConfig patientDaoConfig;
    private final DaoConfig patientIdentifierDaoConfig;
    private final DaoConfig procedureDaoConfig;
    private final DaoConfig systemSettingsDaoConfig;
    private final DaoConfig userDaoConfig;
    private final DaoConfig userCredentialsDaoConfig;
    private final DaoConfig userReportsDaoConfig;

    private final OfflinePatientDao offlinePatientDao;
    private final SaveableFormDao saveableFormDao;
    private final ServiceHistoryDao serviceHistoryDao;
    private final EncountersWithObsDao encountersWithObsDao;
    private final FormTypeDao formTypeDao;
    private final IdentifierTypeDao identifierTypeDao;
    private final ImageDao imageDao;
    private final LocationDao locationDao;
    private final LocationAttributeDao locationAttributeDao;
    private final LocationAttributeTypeDao locationAttributeTypeDao;
    private final LocationTagDao locationTagDao;
    private final LocationTagMapDao locationTagMapDao;
    private final OptionDao optionDao;
    private final PatientDao patientDao;
    private final PatientIdentifierDao patientIdentifierDao;
    private final ProcedureDao procedureDao;
    private final SystemSettingsDao systemSettingsDao;
    private final UserDao userDao;
    private final UserCredentialsDao userCredentialsDao;
    private final UserReportsDao userReportsDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        offlinePatientDaoConfig = daoConfigMap.get(OfflinePatientDao.class).clone();
        offlinePatientDaoConfig.initIdentityScope(type);

        saveableFormDaoConfig = daoConfigMap.get(SaveableFormDao.class).clone();
        saveableFormDaoConfig.initIdentityScope(type);

        serviceHistoryDaoConfig = daoConfigMap.get(ServiceHistoryDao.class).clone();
        serviceHistoryDaoConfig.initIdentityScope(type);

        encountersWithObsDaoConfig = daoConfigMap.get(EncountersWithObsDao.class).clone();
        encountersWithObsDaoConfig.initIdentityScope(type);

        formTypeDaoConfig = daoConfigMap.get(FormTypeDao.class).clone();
        formTypeDaoConfig.initIdentityScope(type);

        identifierTypeDaoConfig = daoConfigMap.get(IdentifierTypeDao.class).clone();
        identifierTypeDaoConfig.initIdentityScope(type);

        imageDaoConfig = daoConfigMap.get(ImageDao.class).clone();
        imageDaoConfig.initIdentityScope(type);

        locationDaoConfig = daoConfigMap.get(LocationDao.class).clone();
        locationDaoConfig.initIdentityScope(type);

        locationAttributeDaoConfig = daoConfigMap.get(LocationAttributeDao.class).clone();
        locationAttributeDaoConfig.initIdentityScope(type);

        locationAttributeTypeDaoConfig = daoConfigMap.get(LocationAttributeTypeDao.class).clone();
        locationAttributeTypeDaoConfig.initIdentityScope(type);

        locationTagDaoConfig = daoConfigMap.get(LocationTagDao.class).clone();
        locationTagDaoConfig.initIdentityScope(type);

        locationTagMapDaoConfig = daoConfigMap.get(LocationTagMapDao.class).clone();
        locationTagMapDaoConfig.initIdentityScope(type);

        optionDaoConfig = daoConfigMap.get(OptionDao.class).clone();
        optionDaoConfig.initIdentityScope(type);

        patientDaoConfig = daoConfigMap.get(PatientDao.class).clone();
        patientDaoConfig.initIdentityScope(type);

        patientIdentifierDaoConfig = daoConfigMap.get(PatientIdentifierDao.class).clone();
        patientIdentifierDaoConfig.initIdentityScope(type);

        procedureDaoConfig = daoConfigMap.get(ProcedureDao.class).clone();
        procedureDaoConfig.initIdentityScope(type);

        systemSettingsDaoConfig = daoConfigMap.get(SystemSettingsDao.class).clone();
        systemSettingsDaoConfig.initIdentityScope(type);

        userDaoConfig = daoConfigMap.get(UserDao.class).clone();
        userDaoConfig.initIdentityScope(type);

        userCredentialsDaoConfig = daoConfigMap.get(UserCredentialsDao.class).clone();
        userCredentialsDaoConfig.initIdentityScope(type);

        userReportsDaoConfig = daoConfigMap.get(UserReportsDao.class).clone();
        userReportsDaoConfig.initIdentityScope(type);

        offlinePatientDao = new OfflinePatientDao(offlinePatientDaoConfig, this);
        saveableFormDao = new SaveableFormDao(saveableFormDaoConfig, this);
        serviceHistoryDao = new ServiceHistoryDao(serviceHistoryDaoConfig, this);
        encountersWithObsDao = new EncountersWithObsDao(encountersWithObsDaoConfig, this);
        formTypeDao = new FormTypeDao(formTypeDaoConfig, this);
        identifierTypeDao = new IdentifierTypeDao(identifierTypeDaoConfig, this);
        imageDao = new ImageDao(imageDaoConfig, this);
        locationDao = new LocationDao(locationDaoConfig, this);
        locationAttributeDao = new LocationAttributeDao(locationAttributeDaoConfig, this);
        locationAttributeTypeDao = new LocationAttributeTypeDao(locationAttributeTypeDaoConfig, this);
        locationTagDao = new LocationTagDao(locationTagDaoConfig, this);
        locationTagMapDao = new LocationTagMapDao(locationTagMapDaoConfig, this);
        optionDao = new OptionDao(optionDaoConfig, this);
        patientDao = new PatientDao(patientDaoConfig, this);
        patientIdentifierDao = new PatientIdentifierDao(patientIdentifierDaoConfig, this);
        procedureDao = new ProcedureDao(procedureDaoConfig, this);
        systemSettingsDao = new SystemSettingsDao(systemSettingsDaoConfig, this);
        userDao = new UserDao(userDaoConfig, this);
        userCredentialsDao = new UserCredentialsDao(userCredentialsDaoConfig, this);
        userReportsDao = new UserReportsDao(userReportsDaoConfig, this);

        registerDao(OfflinePatient.class, offlinePatientDao);
        registerDao(SaveableForm.class, saveableFormDao);
        registerDao(ServiceHistory.class, serviceHistoryDao);
        registerDao(EncountersWithObs.class, encountersWithObsDao);
        registerDao(FormType.class, formTypeDao);
        registerDao(IdentifierType.class, identifierTypeDao);
        registerDao(Image.class, imageDao);
        registerDao(Location.class, locationDao);
        registerDao(LocationAttribute.class, locationAttributeDao);
        registerDao(LocationAttributeType.class, locationAttributeTypeDao);
        registerDao(LocationTag.class, locationTagDao);
        registerDao(LocationTagMap.class, locationTagMapDao);
        registerDao(Option.class, optionDao);
        registerDao(Patient.class, patientDao);
        registerDao(PatientIdentifier.class, patientIdentifierDao);
        registerDao(Procedure.class, procedureDao);
        registerDao(SystemSettings.class, systemSettingsDao);
        registerDao(User.class, userDao);
        registerDao(UserCredentials.class, userCredentialsDao);
        registerDao(UserReports.class, userReportsDao);
    }
    
    public void clear() {
        offlinePatientDaoConfig.clearIdentityScope();
        saveableFormDaoConfig.clearIdentityScope();
        serviceHistoryDaoConfig.clearIdentityScope();
        encountersWithObsDaoConfig.clearIdentityScope();
        formTypeDaoConfig.clearIdentityScope();
        identifierTypeDaoConfig.clearIdentityScope();
        imageDaoConfig.clearIdentityScope();
        locationDaoConfig.clearIdentityScope();
        locationAttributeDaoConfig.clearIdentityScope();
        locationAttributeTypeDaoConfig.clearIdentityScope();
        locationTagDaoConfig.clearIdentityScope();
        locationTagMapDaoConfig.clearIdentityScope();
        optionDaoConfig.clearIdentityScope();
        patientDaoConfig.clearIdentityScope();
        patientIdentifierDaoConfig.clearIdentityScope();
        procedureDaoConfig.clearIdentityScope();
        systemSettingsDaoConfig.clearIdentityScope();
        userDaoConfig.clearIdentityScope();
        userCredentialsDaoConfig.clearIdentityScope();
        userReportsDaoConfig.clearIdentityScope();
    }

    public OfflinePatientDao getOfflinePatientDao() {
        return offlinePatientDao;
    }

    public SaveableFormDao getSaveableFormDao() {
        return saveableFormDao;
    }

    public ServiceHistoryDao getServiceHistoryDao() {
        return serviceHistoryDao;
    }

    public EncountersWithObsDao getEncountersWithObsDao() {
        return encountersWithObsDao;
    }

    public FormTypeDao getFormTypeDao() {
        return formTypeDao;
    }

    public IdentifierTypeDao getIdentifierTypeDao() {
        return identifierTypeDao;
    }

    public ImageDao getImageDao() {
        return imageDao;
    }

    public LocationDao getLocationDao() {
        return locationDao;
    }

    public LocationAttributeDao getLocationAttributeDao() {
        return locationAttributeDao;
    }

    public LocationAttributeTypeDao getLocationAttributeTypeDao() {
        return locationAttributeTypeDao;
    }

    public LocationTagDao getLocationTagDao() {
        return locationTagDao;
    }

    public LocationTagMapDao getLocationTagMapDao() {
        return locationTagMapDao;
    }

    public OptionDao getOptionDao() {
        return optionDao;
    }

    public PatientDao getPatientDao() {
        return patientDao;
    }

    public PatientIdentifierDao getPatientIdentifierDao() {
        return patientIdentifierDao;
    }

    public ProcedureDao getProcedureDao() {
        return procedureDao;
    }

    public SystemSettingsDao getSystemSettingsDao() {
        return systemSettingsDao;
    }

    public UserDao getUserDao() {
        return userDao;
    }

    public UserCredentialsDao getUserCredentialsDao() {
        return userCredentialsDao;
    }

    public UserReportsDao getUserReportsDao() {
        return userReportsDao;
    }

}
